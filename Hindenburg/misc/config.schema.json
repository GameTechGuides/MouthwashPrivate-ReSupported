{
  "properties": {
    "versions": {
      "type": "array",
      "description": "An array of game versions that Hindenburg will accept.",
      "items": [
        {
          "type": "string"
        }
      ]
    },
    "clusterName": {
      "type": "string",
      "description": "The name of the cluster that this node belongs to."
    },
    "nodeId": {
      "type": "number",
      "description": "The ID of this node in relation to other nodes in the cluster."
    },
    "checkForUpdates": {
      "type": "boolean",
      "description": "Whether or not to check for updates."
    },
    "autoUpdate": {
      "type": "boolean",
      "description": "Whether or not to auto-update Hindenburg when there is an update available."
    },
    "exitConfirmation": {
      "type": "boolean",
      "description": "Whether or not to confirm when pressing CTRL+C to close Hindenburg."
    },
    "defaultLanuage": {
      "type": "string",
      "description": "Default language to localise disconnect messages to.",
      "enum": [
        "en",
        "es_US",
        "pt_BR",
        "pt",
        "ko",
        "ru",
        "nl",
        "fil",
        "fr",
        "de",
        "it",
        "ja",
        "es_ES",
        "zh",
        "ga"
      ]
    },
    "socket": {
      "type": "object",
      "description": "Options regarding the socket that the server listens on.",
      "properties": {
        "port": {
          "type": "number",
          "description": "The port to listen on."
        },
        "broadcastUnknownGamedata": {
          "type": "boolean",
          "description": "Whether or not to broadcast gamedata messages that don't get handled by the server."
        },
        "messageOrdering": {
          "type": "boolean",
          "description": "Whether to order reliable packets received from clients."
        },
        "ip": {
          "type": "string",
          "description": "The IP address of this node, set to `auto` for it to get auto-discovered."
        }
      }
    },
    "plugins": {
      "type": "object",
      "description": "Options regarding plugins, such as disabling them or passing configuration options.",
      "properties": {
        "loadDirectory": {
          "type": "boolean",
          "description": "Whether to load all plugins in the plugin directory."
        }
      },
      "patternProperties": {
        ".+": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object"
            }
          ]
        }
      }
    },
    "anticheat": {
      "type": "object",
      "description": "Advanced options for HACS, Hindenburg's Anti-Cheat System.",
      "properties": {
        "penalty": {
          "type": "object",
          "description": "The penalty to give a player for breaking this rule.",
          "properties": {
            "action": {
              "type": "string",
              "description": "The action that should be applied on this user for breaking this rule.",
              "enum": [
                "disconnect",
                "ban",
                "ignore"
              ]
            },
            "strikes": {
              "type": "number",
              "description": "The number of strikes that this user has before they are penalised."
            },
            "banAfterXDisconnects": {
              "type": "number",
              "description": "The number of general disconnects the player should have to have had for breaking this rule until they are banned."
            },
            "banDuration": {
              "type": "number",
              "description": "The length, in seconds, of how long to ban a player for breaking this rule."
            },
            "disconnectMessage": {
              "type": "string",
              "description": "The message to give this player when disconnecting or banning this player."
            }
          }
        },
        "rules": {
          "description": "Configuration for each individual sub-rule.",
          "patternProperties": {
            ".+": {
              "anyOf": [
                {
                  "$ref": "#/properties/anticheat",
                  "patternProperties": {
                    ".+": {}
                  }
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          }
        }
      }
    },
    "logging": {
      "type": "object",
      "description": "Options for logging.",
      "properties": {
        "hideSensitiveInfo": {
          "type": "boolean",
          "description": "Whether to hide sensitive information from logging, such as ip addresses."
        },
        "connections": {
          "type": "object",
          "description": "Logging options for client connections.",
          "properties": {
            "format": {
              "type": "array",
              "description": "Custom formatting for the extra information provided when logging client connections. (The part in parenthesis after their username.)",
              "items":{
                "type": "string",
                "enum": [
                  "id",
                  "ip",
                  "ping",
                  "room",
                  "language"
                ]
              },
              "uniqueItems": true
            }
          }
        },
        "rooms": {
          "type": "object",
          "description": "Logging options for game rooms.",
          "properties": {
            "format": {
              "type": "array",
              "description": "Custom formatting for the extra information provided when rooms are logged. (The part in parenthesis after the game code.)",
              "items": {
                "type": "string",
                "enum": [
                  "players",
                  "map",
                  "saah"
                ]
              },
              "uniqueItems": true
            }
          }
        },
        "players": {
          "type": "object",
          "description": "Logging options for logging players in-game.",
          "properties": {
            "format": {
              "type": "array",
              "description": "Custom formatting for the extra information provided when players are logged. (The part in parenthesis after the player's name.)",
              "items":  {
                "type": "string",
                "enum": [
                  "id",
                  "ping",
                  "ishost"
                ]
              },
              "uniqueItems": true
            }
          }
        }
      }
    },
    "reactor": {
      "description": "Options for Hindenburg's reactor integration.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "blockClientSideOnly": {
              "type": "boolean",
              "description": "Whether to block reactor RPCs from mods that are declared as being client-side-only."
            },
            "mods": {
              "description": "Individual configuration for each mod in regards to how Hindenburg should treat them.",
              "type": "object",
              "patternProperties": {
                ".+": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "optional": {
                          "type": "boolean",
                          "description": "Whether this mod is optional, and clients can connect without it."
                        },
                        "banned": {
                          "type": "boolean",
                          "description": "Whether clients with this mod cannot connect."
                        },
                        "version": {
                          "type": "string",
                          "description": "Enforce a specific version glob for this mod."
                        },
                        "doNetworking": {
                          "type": "boolean",
                          "description": "Whether to broadcast messages sent by this mod."
                        }
                      }
                    }
                  ]
                }
              }
            },
            "allowExtraMods": {
              "type": "boolean",
              "description": "Whether to allow extra mods aside from those in 'mods' which would still be used to enforce certain version of mods, and to require certain mods."
            },
            "allowNormalClients": {
              "type": "boolean",
              "description": "Whether to allow normal clients to connect."
            },
            "requireHostMods": {
              "type": "boolean",
              "description": "Whether or not to require joining clients to have the same mods as the host."
            }
          }
        }
      ]
    },
    "rooms": {
      "type": "object",
      "properties": {
        "checkChatMode": {
          "type": "boolean",
          "description": "Whether or not to make sure players have the same chat mode as the host before joining."
        },
        "chatCommands": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "prefix": {
                  "type": "string",
                  "description": "The prefix (or command identifier) for commands."
                },
                "helpCommand": {
                  "type": "boolean",
                  "description": "Whether or not rooms can use the built-in help command."
                }
              }
            }
          ]
        },
        "gameCodes": {
          "type": "string",
          "enum": [
            "v1",
            "v2"
          ],
          "description": "The type of game code to generate for rooms, \"v1\" for a 4-letter code and \"v2\" for a 6-letter code."
        },
        "enforceSettings": {
          "type": "object",
          "description": "Enforce certain settings, preventing the host from changing them.",
          "properties": {
            "versions": {
              "type": "number"
            },
            "maxPlayers": {
              "type": "number"
            },
            "keywords": {
              "type": "string",
              "enum": [
                "All",
                "Other",
                "Spanish (Latin America)",
                "Korean",
                "Russian",
                "Portuguese",
                "Arabic",
                "Filipino",
                "Polish",
                "English",
                "Japanese",
                "Spanish",
                "Portuguese Brazil",
                "Dutch",
                "French",
                "German",
                "Italian",
                "ChineseSimplified",
                "ChineseTraditional",
                "Irish"
              ]
            },
            "map": {
              "type": "string",
              "enum": [
                "The Skeld",
                "Mira HQ",
                "Polus",
                "The Skeld April Fools",
                "Airship"
              ]
            },
            "playerSpeed": {
              "type": "number"
            },
            "crewmateVision": {
              "type": "number"
            },
            "impostorVision": {
              "type": "number"
            },
            "killCooldown": {
              "type": "number"
            },
            "commonTasks": {
              "type": "number"
            },
            "longTasks": {
              "type": "number"
            },
            "shortTasks": {
              "type": "number"
            },
            "numEmergencies": {
              "type": "number"
            },
            "numImpostors": {
              "type": "number"
            },
            "killDistance": {
              "type": "string",
              "enum": [
                "Short",
                "Medium",
                "Long"
              ]
            },
            "discussionTime": {
              "type": "number"
            },
            "votingTime": {
              "type": "number"
            },
            "isDefaults": {
              "type": "number"
            },
            "emergencyCooldown": {
              "type": "number"
            },
            "confirmEjects": {
              "type": "number"
            },
            "visualTasks": {
              "type": "number"
            },
            "anonymousVotes": {
              "type": "number"
            },
            "taskbarUpdates": {
              "type": "string",
              "enum": [
                "Always",
                "Meetings",
                "Never"
              ]
            }
          }
        },
        "plugins": {
          "type": "object",
          "description": "Options regarding plugins, such as disabling them or passing configuration options.",
          "properties": {
            "loadDirectory": {
              "type": "boolean",
              "description": "Whether to load all plugins in the plugin directory."
            }
          },
          "patternProperties": {
            ".+": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        },
        "serverAsHost": {
          "type": "boolean",
          "description": "Whether the server should act as the host of the room."
        },
        "serverPlayer":  {
          "type": "object",
          "description": "Default appearance for a message sent by the server in game chat",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the player for a message sent by the server in game chat"
            },
            "color": {
              "type": "string",
              "description": "The color of the player for a message sent by the server in game chat",
              "enum": [
                "Red",
                "Blue",
                "Green",
                "Pink",
                "Orange",
                "Yellow",
                "Black",
                "White",
                "Purple",
                "Brown",
                "Cyan",
                "LightGreen",
                "Maroon",
                "Rose",
                "Banana",
                "Gray",
                "Tan",
                "Sunset"
              ]
            },
            "hat": {
              "type": "string",
              "description": "The hat of the player for a message sent by the server in game chat",
              "enum": [
                "None",
                "Astronaut",
                "BaseballCap",
                "BrainSlug",
                "BushHat",
                "CaptainHat",
                "DoubleTopHat",
                "Flowerpot",
                "Goggles",
                "HardHat",
                "MilitaryHat",
                "PaperHat",
                "PartyHat",
                "PoliceHat",
                "Stethoscope",
                "TopHat",
                "TowelWizard",
                "Ushanka",
                "Viking",
                "WallGuardCap",
                "Snowman",
                "ReindeerAntlers",
                "ChristmasLights",
                "SantaHat",
                "ChristmasTree",
                "ChristmasPresent",
                "CandyCanes",
                "ElfHat",
                "NewYears2018",
                "WhiteHat",
                "Crown",
                "Eyebrows",
                "Halo",
                "HeroCap",
                "PipCap",
                "Plunger",
                "ScubaMask",
                "HenryStickmin",
                "StrawHat",
                "TenGallonHat",
                "ThirdEye",
                "ToiletPaper",
                "ToppatClanLeader",
                "BlackFedora",
                "SkiGoggles",
                "HearingProtection",
                "HazmatMask",
                "FaceMask",
                "SecurityHatGlasses",
                "SafariHat",
                "Banana",
                "Beanie",
                "BearEars",
                "Cheese",
                "Cherry",
                "Egg",
                "GreenFedora",
                "Flamingo",
                "Flower",
                "KnightHelmet",
                "Plant",
                "BatEyes",
                "BatWings",
                "Horns",
                "Mohawk",
                "Pumpkin",
                "ScaryPaperBag",
                "WitchHat",
                "WolfEars",
                "PirateHat",
                "PlagueDoctor",
                "Machete",
                "HockeyMask",
                "MinerHelmet",
                "WinterCap",
                "ArchaeologistHat",
                "Antenna",
                "Balloon",
                "BirdNest",
                "BlackBelt",
                "CautionSign",
                "ChefHat",
                "CopHat",
                "DoRag",
                "DumSticker",
                "Fez",
                "GeneralHat",
                "PompadourHair",
                "HunterHat",
                "JungleHat",
                "MiniCrewmate",
                "NinjaMask",
                "RamHorns",
                "MiniCrewmateSnowman",
                "GeoffKeighleyMask",
                "DavePandaCap",
                "EllieRoseHair",
                "SvenSvenssonHat",
                "BurtCurtisHat",
                "EllryMohawk",
                "ThomasChestershireMonocles",
                "Wizardhat",
                "FrederickMuensterHat",
                "MrMacbethhat",
                "ToppatHenryStickminHat",
                "ToppatEllieRoseHat",
                "GeoffreyPlumbHat",
                "AngryEyebrows",
                "ChocolateIceCream",
                "HeartPin",
                "Ponytail",
                "RubberGlove",
                "UnicornHat",
                "Zipper",
                "RightHandManHat"
              ]
            },
            "skin": {
              "type": "string",
              "description": "The skin of the player for a message sent by the server in game chat",
              "enum": [
                "None",
                "Astronaut",
                "Captain",
                "Mechanic",
                "Military",
                "Police",
                "Scientist",
                "SuitBlack",
                "SuitWhite",
                "WallGuard",
                "Hazmat",
                "SecurityGuard",
                "Tarmac",
                "Miner",
                "Winter",
                "Archaeologist",
                "Prisoner",
                "CCC",
                "RightHandManReborn"
              ]
            }
          }
        },
        "createTimeout": {
          "type": "number",
          "description": "The timeout in seconds to wait for a player joins before considering the room empty and destroying it."
        }
      }
    }
  }
}

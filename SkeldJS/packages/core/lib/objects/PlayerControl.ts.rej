--- packages/core/lib/objects/PlayerControl.ts
+++ packages/core/lib/objects/PlayerControl.ts
@@ -1,12 +1,17 @@
 import { HazelReader, HazelWriter } from "@skeldjs/util";
+import { ExtractEventTypes } from "@skeldjs/events";
 
 import {
     BaseRpcMessage,
     CheckColorMessage,
+    CheckMurderMessage,
     CheckNameMessage,
+    CheckProtectMessage,
     CompleteTaskMessage,
+    ComponentSpawnData,
     GameSettings,
     MurderPlayerMessage,
+    ProtectPlayerMessage,
     QuickChatMessageData,
     QuickChatPhraseMessageData,
     QuickChatPlayerMessageData,
@@ -18,11 +23,15 @@ import {
     SendQuickChatMessage,
     SetColorMessage,
     SetHatMessage,
-    SetInfectedMessage,
     SetNameMessage,
+    SetNameplateMessage,
     SetPetMessage,
+    SetRoleMessage,
     SetSkinMessage,
     SetStartCounterMessage,
+    SetVisorMessage,
+    ShapeshiftMessage,
+    SpawnMessage,
     StartMeetingMessage,
     SyncSettingsMessage,
     UsePlatformMessage
@@ -978,9 +848,12 @@ export class PlayerControl<RoomType extends Hostable = Hostable> extends Network
         if (caller.playerId === undefined)
             return;
 
-        const spawnMeetinghud = this.room.spawnPrefab(
+        const spawnMeetinghud = this.room.spawnPrefabOfType(
             SpawnType.MeetingHud,
-            -2
+            -2,
+            undefined,
+            undefined,
+            false
         ) as MeetingHud<RoomType>;
 
         const callerState = spawnMeetinghud.voteStates.get(caller.playerId);
